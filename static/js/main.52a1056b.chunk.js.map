{"version":3,"sources":["Statistics/Statistics.module.css","Section/Section.module.css","Container/Container.module.css","Feedback/FeedbackOptions.module.css","Section/Section.js","Container/Container.js","Statistics/Statistics.js","Notification/Notification.js","Feedback/FeedbackOptions.js","App.js","reportWebVitals.js","index.js"],"names":["module","exports","Section","title","children","className","s","box","Container","с","container","Statistics","good","neutral","bad","total","positivePercentage","item","Notification","FeedbackOptions","options","onLeaveFeedback","map","option","f","btn","type","onClick","Counter","state","e","setState","console","log","countTotalFeedback","Object","values","reduce","a","b","countPositiveFeedbackPercentage","Math","round","this","obj","keys","feedback","Component","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","App","document","getElementById"],"mappings":"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","file":"static/js/main.52a1056b.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"box\":\"Statistics_box__3LGlj\",\"item\":\"Statistics_item__1a6-0\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"box\":\"Section_box__1Xo6h\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"Container_container__3Bz3N\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"btn\":\"FeedbackOptions_btn__12M7p\"};","import PropTypes from \"prop-types\";\nimport s from \"./Section.module.css\";\nexport default function Section({ title, children }) {\n  return (\n    <section className={s.box}>\n      {title && <h2>{title}</h2>}\n      {children}\n    </section>\n  );\n}\nSection.propTypes = {\n  title: PropTypes.string.isRequired,\n  children: PropTypes.node.isRequired,\n};\n","import PropTypes from \"prop-types\";\nimport с from \"./Container.module.css\";\n\nexport default function Container({ children }) {\n  return <div className={с.container}>{children}</div>;\n}\nContainer.propTypes = {\n  children: PropTypes.array.isRequired,\n};\n","import PropTypes from \"prop-types\";\nimport React from \"react\";\nimport s from \"./Statistics.module.css\";\n\nconst Statistics = ({ good, neutral, bad, total, positivePercentage }) => {\n  return (\n    <ul className={s.box}>\n      <li className={s.item}>Good: {good}</li>\n      <li className={s.item}>Neutral: {neutral}</li>\n      <li className={s.item}>Bad: {bad}</li>\n      <li className={s.item}>Total: {total}</li>\n      <li className={s.item}>Positive feedback: {positivePercentage}%</li>\n    </ul>\n  );\n};\nStatistics.propTypes = {\n  good: PropTypes.number.isRequired,\n  neutral: PropTypes.number.isRequired,\n  bad: PropTypes.number.isRequired,\n  total: PropTypes.number.isRequired,\n  positivePercentage: PropTypes.number.isRequired,\n};\nexport default Statistics;\n","import PropTypes from \"prop-types\";\nexport default function Notification({ title }) {\n  return <section>{title && <h3>{title}</h3>}</section>;\n}\nNotification.propTypes = {\n  title: PropTypes.string.isRequired,\n};\n","import f from \"./FeedbackOptions.module.css\";\nimport PropTypes from \"prop-types\";\n\nconst FeedbackOptions = ({ options, onLeaveFeedback }) => {\n  return (\n    <>\n      {options.map((option) => (\n        <button\n          key={option}\n          className={f.btn}\n          type=\"button\"\n          onClick={() => onLeaveFeedback(option)}\n        >\n          {option}\n        </button>\n      ))}\n    </>\n  );\n};\nFeedbackOptions.propTypes = {\n  onLeaveFeedback: PropTypes.func,\n  options: PropTypes.node.isRequired,\n};\n\nexport default FeedbackOptions;\n","import React, { Component } from \"react\";\nimport Section from \"./Section/Section\";\nimport Container from \"./Container/Container\";\nimport Statistics from \"./Statistics/Statistics\";\nimport Notification from \"./Notification/Notification\";\nimport FeedbackOptions from \"./Feedback/FeedbackOptions\";\n\nclass Counter extends Component {\n  state = {\n    good: 0,\n    neutral: 0,\n    bad: 0,\n  };\n  onLeaveFeedback = (e) => {\n    this.setState((state) => ({\n      [e]: state[e] + 1,\n    }));\n    console.log(\"Кликнули на кнопку\");\n  };\n\n  countTotalFeedback = () => {\n    const sum = Object.values(this.state).reduce((a, b) => a + b, 0);\n    return sum;\n  };\n\n  countPositiveFeedbackPercentage = () => {\n    const percentage = Math.round(\n      (this.state.good / this.countTotalFeedback()) * 100\n    );\n    return percentage;\n  };\n  render() {\n    const { good, neutral, bad } = this.state;\n    const obj = Object.keys(this.state);\n    const feedback = this.onLeaveFeedback;\n    const total = this.countTotalFeedback();\n    const positivePercentage = this.countPositiveFeedbackPercentage();\n\n    return (\n      <Container>\n        <Section title=\"Please leave feedback\">\n          <FeedbackOptions options={obj} onLeaveFeedback={feedback} />\n        </Section>\n        <h2 title=\"Statistics\"> </h2>\n        <Section title=\"Statistics\">\n          {total > 0 ? (\n            <Statistics\n              good={good}\n              neutral={neutral}\n              bad={bad}\n              total={total}\n              positivePercentage={positivePercentage}\n            />\n          ) : (\n            <Notification title=\"No feedback given\"></Notification>\n          )}\n        </Section>\n      </Container>\n    );\n  }\n}\n\nexport default Counter;\n","const reportWebVitals = (onPerfEntry) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import(\"web-vitals\").then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport reportWebVitals from \"./reportWebVitals\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}